version: "3.7"
services:
  auth-service-db:
    container_name: auth-service-db
    image: postgres:alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: auth_db_user
      POSTGRES_PASSWORD: auth_db_password
    volumes:
      - ./auth_service/sql/database.sql:/docker-entrypoint-initdb.d/database.sql
    networks:
      - backend

  auth-service:
    image: maven:latest
    volumes: 
      - ./auth_service/src:/backend/auth_service/src          
      - ./auth_service/target:/backend/auth_service/target  
      - ./auth_service/.mvn:/backend/auth_service/.mvn
      - ./auth_service/pom.xml:/backend/auth_service/pom.xml
    working_dir: /backend/auth_service
    ports:
      - "8081:8080"
    depends_on:
      - auth-service-db
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://auth-service-db:5432/auth_db
      SPRING_DATASOURCE_USERNAME: auth_db_user
      SPRING_DATASOURCE_PASSWORD: auth_db_password
    command: mvn spring-boot:run
    networks:
      - backend

  travel-service-db:
    container_name: travel-service-db
    image: postgres:alpine
    environment:
      POSTGRES_USER: travel_db_user
      POSTGRES_PASSWORD: travel_db_password
    volumes:
      - ./travel_service/sql/database.sql:/docker-entrypoint-initdb.d/database.sql
      - ./travel_service/sql/location.sql:/docker-entrypoint-initdb.d/location.sql
    networks:
      - backend

  travel-service:
    image: maven:latest
    volumes: 
      - ./travel_service/src:/backend/travel_service/src          
      - ./travel_service/target:/backend/travel_service/target  
      - ./travel_service/.mvn:/backend/travel_service/.mvn
      - ./travel_service/pom.xml:/backend/travel_service/pom.xml
    working_dir: /backend/travel_service
    ports:
      - "8082:8080"
    depends_on:
      - travel-service-db
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://travel-service-db:5432/travel_db
      SPRING_DATASOURCE_USERNAME: travel_db_user
      SPRING_DATASOURCE_PASSWORD: travel_db_password
    command: mvn spring-boot:run
    networks:
      - backend
      
  user-service-db:
    container_name: user-service-db
    image: postgres:alpine
    environment:
      POSTGRES_USER: user_db_user
      POSTGRES_PASSWORD: user_db_password
    volumes:
      - ./user_service/sql/database.sql:/docker-entrypoint-initdb.d/database.sql
    networks:
      - backend
  user-service:
    image: maven:latest
    volumes: 
      - ./user_service/src:/backend/user_service/src          
      - ./user_service/target:/backend/user_service/target  
      - ./user_service/.mvn:/backend/user_service/.mvn
      - ./user_service/pom.xml:/backend/user_service/pom.xml
    working_dir: /backend/user_service
    ports:
      - "8083:8080"
    depends_on:
      - user-service-db
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://user-service-db:5432/user_db
      SPRING_DATASOURCE_USERNAME: user_db_user
      SPRING_DATASOURCE_PASSWORD: user_db_password
    command: mvn spring-boot:run
    networks:
      - backend

  api-gateway:
    image: maven:latest
    volumes:
      - ./gateway/src:/backend/gateway/src          
      - ./gateway/target:/backend/gateway/target  
      - ./gateway/.mvn:/backend/gateway/.mvn
      - ./gateway/pom.xml:/backend/gateway/pom.xml
    working_dir: /backend/gateway
    ports:
      - "8080:8080"
    depends_on:
      - travel-service
      - auth-service
    command: mvn spring-boot:run
    networks:
      - backend

networks:
  backend:
    driver: bridge
